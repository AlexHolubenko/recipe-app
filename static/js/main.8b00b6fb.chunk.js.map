{"version":3,"sources":["Navbar.js","RecipeInput.js","Recipe.js","pages/RecipeList.js","pages/Home.js","RecipeApp.js","serviceWorker.js","index.js"],"names":["Navbar","to","onClick","this","props","onNewRecipe","Component","defaultProps","RecipeInput","state","title","instruction","ingredients","img","handleChange","bind","handleNewIngredient","handleChangeIng","handleSubmit","e","setState","target","name","value","index","Number","split","map","ing","i","preventDefault","onSave","inputs","onClose","className","key","type","size","autoComplete","placeholder","onChange","onSubmit","htmlFor","id","style","marginTop","rows","cols","alignSelf","marginRight","Recipe","onDelete","src","alt","RecipeList","recipes","r","Home","RecipeApp","nextRecipeId","showForm","handleSave","recipe","prevState","newRecipe","filter","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b00b6fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Navbar.css';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    static defaultProps = {\r\n        onNewRecipe() {}\r\n    }\r\n    static propTypes = {\r\n        onNewRecipe: PropTypes.func\r\n    }\r\n    render() {\r\n        return (\r\n            <header>\r\n             <h2><Link to=\"/home\">Recipe App</Link></h2>\r\n             <nav>\r\n                 <li><Link to=\"/recipes\" onClick={this.props.onNewRecipe}>New Recipe</Link></li>\r\n                 <li><Link to=\"/recipes\">Recipes</Link></li>\r\n             </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './RecipeInput.css';\r\n\r\n\r\nclass RecipeInput extends Component {\r\n    static defaultProps = {\r\n        onClose() {},\r\n        onSave() {},\r\n      }\r\n      \r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title: '',\r\n          instruction: \"\",\r\n          ingredients: [''],\r\n          img: ''\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleNewIngredient = this.handleNewIngredient.bind(this);\r\n        this.handleChangeIng = this.handleChangeIng.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      \r\n      handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n      }\r\n      \r\n      handleNewIngredient(e) {\r\n        const {ingredients} = this.state;\r\n        this.setState({ingredients: [...ingredients, '']});\r\n      }\r\n      \r\n      handleChangeIng(e) {\r\n        const index = Number(e.target.name.split('-')[1]);\r\n        const ingredients = this.state.ingredients.map((ing, i) => (\r\n          i === index ? e.target.value : ing\r\n        ));\r\n        this.setState({ingredients});\r\n      }\r\n      \r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onSave({...this.state});\r\n        this.setState({\r\n          title: '',\r\n          instruction: '',\r\n          ingredients: [''],\r\n          img: ''\r\n        })\r\n      }\r\n    render(){\r\n        const {title, instruction, ingredients, img} = this.state;\r\n        const {onClose} = this.props;\r\n        let inputs = ingredients.map((ing, i)=>(\r\n            <div className=\"recipe-form-line\" key={`ingredient-${i}`}>\r\n                <label>{i+1}\r\n                    <input\r\n                     type=\"text\"\r\n                     name={`ingrediant-${i}`}\r\n                     value={ing}\r\n                     size={45}\r\n                     autoComplete=\"off\"\r\n                     placeholder=\" Ingredient\"\r\n                     onChange={this.handleChangeIng}\r\n                    />\r\n                </label>\r\n            </div>\r\n        ))\r\n\r\n\r\n        return (\r\n            <div className=\"recipe-form-container\">\r\n              <form className='recipe-form' onSubmit={this.handleSubmit}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close-button\"\r\n                  onClick={this.props.onClose}\r\n                >\r\n                  X\r\n                </button>\r\n                <div className='recipe-form-line'>\r\n                  <label htmlFor='recipe-title-input'>Title</label>\r\n                  <input\r\n                    id='recipe-title-input'\r\n                    key='title'\r\n                    name='title'\r\n                    type='text'\r\n                    value={title}\r\n                    size={42}\r\n                    autoComplete=\"off\"\r\n                    onChange={this.handleChange}/>\r\n                </div>\r\n                <label\r\n                  htmlFor='recipe-instructions-input'\r\n                  style={{marginTop: '5px'}}\r\n                >\r\n                  Instructions\r\n                </label>\r\n                <textarea\r\n                  key='instructions'\r\n                  id='recipe-instructions-input'\r\n                  type='Instructions'\r\n                  name='instruction'\r\n                  rows='8'\r\n                  cols='50'\r\n                  autoComplete='off'\r\n                  value={instruction}\r\n                  onChange={this.handleChange}/>\r\n                {inputs}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.handleNewIngredient}\r\n                  className=\"buttons btn\"\r\n                >\r\n                  +\r\n                </button>\r\n                <div className='recipe-form-line'>\r\n                  <label htmlFor='recipe-img-input'>Image Url</label>\r\n                  <input\r\n                    id='recipe-img-input'\r\n                    type='text'\r\n                    placeholder=''\r\n                    name='img'\r\n                    value={img}\r\n                    size={36}\r\n                    autoComplete='off'\r\n                    onChange={this.handleChange} />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"buttons btn\"\r\n                  style={{alignSelf: 'flex-end', marginRight: 0}}\r\n                >\r\n                  SAVE\r\n                </button>\r\n              </form>\r\n            </div>\r\n          )\r\n       \r\n    }\r\n}\r\n\r\nexport default RecipeInput;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Recipe.css';\r\n\r\nclass Recipe extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        instruction: PropTypes.string.isRequired,\r\n        img: PropTypes.string.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n        onDelete: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {title, img, instruction, id, onDelete} = this.props;\r\n        const ingredients = this.props.ingredients.map((ing, index) => (\r\n                 <li key={index}>{ing}</li>\r\n            )\r\n        );\r\n        return (\r\n            <div className=\"recipe-card\">\r\n                <div className=\"recipe-card-image\">\r\n                    <img src={img} alt={title}/>\r\n                </div>\r\n                <div className=\"recipe-card-content\">\r\n                    <h3 className=\"recipe-card-title\">{title}</h3>\r\n                    <h4>Ingredients</h4>\r\n                    <ul>\r\n                        {ingredients}\r\n                    </ul>\r\n                    <h4>Instruction</h4>\r\n                    <p>{instruction}</p>\r\n                    <button type=\"button\" className=\"btn\" onClick={() => onDelete(id)}>DELETE</button>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Recipe;","import React, {Component} from 'react';\r\nimport Recipe from '../Recipe';\r\nimport PropTypes from 'prop-types';\r\nimport './RecipeList.css';\r\n\r\nclass RecipeList extends Component {\r\n\r\n    static propTypes = {\r\n        recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        onDelete: PropTypes.func.isRequired\r\n    }\r\n    render() {\r\n        const {onDelete} = this.props;\r\n        const recipes = this.props.recipes.map((r) => (\r\n            <Recipe key={r.id} {...r} onDelete={onDelete}/>\r\n        ));\r\n        return (\r\n            <div className=\"recipe-list\">\r\n                {recipes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipeList;","import React from 'react';\r\n\r\n\r\nfunction Home() {\r\n        return (\r\n            <div className=\"home\">\r\n              <h1>Home</h1>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './RecipeApp.css';\r\nimport Navbar from './Navbar';\r\nimport RecipeInput from './RecipeInput';\r\nimport RecipeList from './pages/RecipeList';\r\nimport Home from './pages/Home';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nclass RecipeApp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipes: [\r\n                {\r\n                    id: 0,\r\n                    title: 'Spaghetti',\r\n                    instruction: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n                    ingredients: ['pasta','8 cups water', '1 box something else'],\r\n                    img: \"https://www.365daysofcrockpot.com/wp-content/uploads/2019/08/instant-pot-cream-cheese-spaghetti-recipe.jpg\"\r\n                },            {\r\n                    id: 1,\r\n                    title: 'Milkshake',\r\n                    instruction: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n                    ingredients: ['pasta','8 cups water', '1 box something else'],\r\n                    img: \"https://www.hersheys.com/content/dam/hersheyskitchens/images/recipes/large/8939_en-us_large.jpg\"\r\n                },            {\r\n                    id: 2,\r\n                    title: 'Avokado Toast',\r\n                    instruction: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n                    ingredients: ['pasta','8 cups water', '1 box something else'],\r\n                    img: \"https://www.bbcgoodfood.com/sites/default/files/styles/recipe/public/recipe/recipe-image/2018/03/avocado-on-toast.jpg?itok=yV6yyvoX\"\r\n                },            {\r\n                    id: 3,\r\n                    title: 'Salsa Chicken',\r\n                    instruction: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n                    ingredients: ['pasta','8 cups water', '1 box something else'],\r\n                    img: \"https://www.saltandlavender.com/wp-content/uploads/2019/10/skillet-salsa-chicken-recipe-1-720x1080.jpg\"\r\n                }\r\n                \r\n                \r\n            ],\r\n            nextRecipeId: 4,\r\n            showForm: false\r\n            }\r\n\r\n            this.handleSave = this.handleSave.bind(this);\r\n            this.onDelete = this.onDelete.bind(this)\r\n        }\r\n        handleSave(recipe){\r\n            this.setState((prevState, props)=> {\r\n                const newRecipe = {...recipe, id: this.state.nextRecipeId};\r\n                return {\r\n                    nextRecipeId: prevState.nextRecipeId + 1,\r\n                    recipes: [...this.state.recipes, newRecipe],\r\n                    showForm: false\r\n                }\r\n            })\r\n        }\r\n\r\n        onDelete(id){\r\n            const recipes = this.state.recipes.filter(r => r.id != id);\r\n            this.setState({recipes});\r\n        }\r\n    render() {\r\n        const {showForm} = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n            <Router>\r\n                <Navbar onNewRecipe={()=> this.setState({\r\n                        showForm: true\r\n                    })}/>\r\n                    {showForm ? <RecipeInput onSave={this.handleSave} \r\n                    onClose={()=> this.setState({\r\n                        showForm: false\r\n                    })}/> : null}\r\n                    <Switch>\r\n                        <Route path=\"/home\">\r\n                          <Home />\r\n                        </Route>\r\n                        <Route path=\"/recipes\">\r\n                          <RecipeList recipes={this.state.recipes} onDelete={this.onDelete}/>\r\n                        </Route>\r\n                    </Switch>\r\n                    \r\n            </Router>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default RecipeApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RecipeApp from './RecipeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RecipeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}